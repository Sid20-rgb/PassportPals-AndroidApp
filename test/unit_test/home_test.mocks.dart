// Mocks generated by Mockito 5.4.2 from annotations
// in final_mobile/test/unit_test/home_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:io' as _i9;

import 'package:dartz/dartz.dart' as _i3;
import 'package:final_mobile/core/failure/failure.dart' as _i7;
import 'package:final_mobile/features/home/domain/entity/home_entity.dart'
    as _i8;
import 'package:final_mobile/features/home/domain/repository/home_repository.dart'
    as _i2;
import 'package:final_mobile/features/home/domain/use_case/home_use_case.dart'
    as _i5;
import 'package:final_mobile/features/profile/domain/entity/password_entity.dart'
    as _i12;
import 'package:final_mobile/features/profile/domain/entity/profile_entity.dart'
    as _i11;
import 'package:final_mobile/features/profile/domain/repository/profile_repository.dart'
    as _i4;
import 'package:final_mobile/features/profile/domain/usecase/profile_use_case.dart'
    as _i10;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIHomeRepository_0 extends _i1.SmartFake
    implements _i2.IHomeRepository {
  _FakeIHomeRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIProfileRepository_2 extends _i1.SmartFake
    implements _i4.IProfileRepository {
  _FakeIProfileRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeUseCase extends _i1.Mock implements _i5.HomeUseCase {
  @override
  _i2.IHomeRepository get homeRepository => (super.noSuchMethod(
        Invocation.getter(#homeRepository),
        returnValue: _FakeIHomeRepository_0(
          this,
          Invocation.getter(#homeRepository),
        ),
        returnValueForMissingStub: _FakeIHomeRepository_0(
          this,
          Invocation.getter(#homeRepository),
        ),
      ) as _i2.IHomeRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>> getAllBlogs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllBlogs,
          [],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>>.value(
                _FakeEither_1<_i7.Failure, List<_i8.HomeEntity>>(
          this,
          Invocation.method(
            #getAllBlogs,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>>.value(
                _FakeEither_1<_i7.Failure, List<_i8.HomeEntity>>(
          this,
          Invocation.method(
            #getAllBlogs,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>>);
  @override
  _i6.Future<_i3.Either<_i7.Failure, bool>> addBlog(_i8.HomeEntity? blog) =>
      (super.noSuchMethod(
        Invocation.method(
          #addBlog,
          [blog],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
            _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #addBlog,
            [blog],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
                _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #addBlog,
            [blog],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, bool>>);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>>
      getBookmarkedBlogs() => (super.noSuchMethod(
            Invocation.method(
              #getBookmarkedBlogs,
              [],
            ),
            returnValue:
                _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>>.value(
                    _FakeEither_1<_i7.Failure, List<_i8.HomeEntity>>(
              this,
              Invocation.method(
                #getBookmarkedBlogs,
                [],
              ),
            )),
            returnValueForMissingStub:
                _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>>.value(
                    _FakeEither_1<_i7.Failure, List<_i8.HomeEntity>>(
              this,
              Invocation.method(
                #getBookmarkedBlogs,
                [],
              ),
            )),
          ) as _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>>);
  @override
  _i6.Future<_i3.Either<_i7.Failure, bool>> bookmarkBlog(String? blogId) =>
      (super.noSuchMethod(
        Invocation.method(
          #bookmarkBlog,
          [blogId],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
            _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #bookmarkBlog,
            [blogId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
                _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #bookmarkBlog,
            [blogId],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, bool>>);
  @override
  _i6.Future<_i3.Either<_i7.Failure, bool>> unbookmarkBlog(String? blogId) =>
      (super.noSuchMethod(
        Invocation.method(
          #unbookmarkBlog,
          [blogId],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
            _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #unbookmarkBlog,
            [blogId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
                _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #unbookmarkBlog,
            [blogId],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, bool>>);
  @override
  _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>> getUserBlogs() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserBlogs,
          [],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>>.value(
                _FakeEither_1<_i7.Failure, List<_i8.HomeEntity>>(
          this,
          Invocation.method(
            #getUserBlogs,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>>.value(
                _FakeEither_1<_i7.Failure, List<_i8.HomeEntity>>(
          this,
          Invocation.method(
            #getUserBlogs,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i8.HomeEntity>>>);
  @override
  _i6.Future<_i3.Either<_i7.Failure, bool>> updateBlog(
    _i8.HomeEntity? blog,
    String? blogId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBlog,
          [
            blog,
            blogId,
          ],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
            _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #updateBlog,
            [
              blog,
              blogId,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
                _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #updateBlog,
            [
              blog,
              blogId,
            ],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, bool>>);
  @override
  _i6.Future<_i3.Either<_i7.Failure, bool>> deleteBlog(String? blogId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteBlog,
          [blogId],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
            _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #deleteBlog,
            [blogId],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
                _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #deleteBlog,
            [blogId],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, bool>>);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> uploadBlogCover(_i9.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadBlogCover,
          [file],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, String>>.value(
            _FakeEither_1<_i7.Failure, String>(
          this,
          Invocation.method(
            #uploadBlogCover,
            [file],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, String>>.value(
                _FakeEither_1<_i7.Failure, String>(
          this,
          Invocation.method(
            #uploadBlogCover,
            [file],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, String>>);
}

/// A class which mocks [ProfileUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileUseCase extends _i1.Mock implements _i10.ProfileUseCase {
  @override
  _i4.IProfileRepository get profileRepository => (super.noSuchMethod(
        Invocation.getter(#profileRepository),
        returnValue: _FakeIProfileRepository_2(
          this,
          Invocation.getter(#profileRepository),
        ),
        returnValueForMissingStub: _FakeIProfileRepository_2(
          this,
          Invocation.getter(#profileRepository),
        ),
      ) as _i4.IProfileRepository);
  @override
  _i6.Future<_i3.Either<_i7.Failure, String>> uploadProfilePicture(
          _i9.File? file) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadProfilePicture,
          [file],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, String>>.value(
            _FakeEither_1<_i7.Failure, String>(
          this,
          Invocation.method(
            #uploadProfilePicture,
            [file],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, String>>.value(
                _FakeEither_1<_i7.Failure, String>(
          this,
          Invocation.method(
            #uploadProfilePicture,
            [file],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, String>>);
  @override
  _i6.Future<
      _i3
          .Either<_i7.Failure, List<_i11.ProfileEntity>>> getAllProfile() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllProfile,
          [],
        ),
        returnValue:
            _i6.Future<_i3.Either<_i7.Failure, List<_i11.ProfileEntity>>>.value(
                _FakeEither_1<_i7.Failure, List<_i11.ProfileEntity>>(
          this,
          Invocation.method(
            #getAllProfile,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, List<_i11.ProfileEntity>>>.value(
                _FakeEither_1<_i7.Failure, List<_i11.ProfileEntity>>(
          this,
          Invocation.method(
            #getAllProfile,
            [],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, List<_i11.ProfileEntity>>>);
  @override
  _i6.Future<_i3.Either<_i7.Failure, bool>> updateUserProfile(
          _i12.PasswordEntity? password) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserProfile,
          [password],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
            _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #updateUserProfile,
            [password],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
                _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #updateUserProfile,
            [password],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, bool>>);
  @override
  _i6.Future<_i3.Either<_i7.Failure, bool>> editProfile(
    String? username,
    String? email,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #editProfile,
          [
            username,
            email,
          ],
        ),
        returnValue: _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
            _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #editProfile,
            [
              username,
              email,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i3.Either<_i7.Failure, bool>>.value(
                _FakeEither_1<_i7.Failure, bool>(
          this,
          Invocation.method(
            #editProfile,
            [
              username,
              email,
            ],
          ),
        )),
      ) as _i6.Future<_i3.Either<_i7.Failure, bool>>);
}
